name: CD

on:
  push:
    branches: [ main ]
  workflow_dispatch: {} # TEMP

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: staging
    env:
      # Required: define these in repo Settings â†’ Secrets/Variables
      RENDER_SERVICE_ID: ${{ vars.RENDER_STAGING_SERVICE_ID }}
      RENDER_API_TOKEN: ${{ secrets.RENDER_API_TOKEN }}
      DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
      BASE_URL: ${{ vars.STAGING_BASE_URL }} # or secrets.STAGING_BASE_URL if you made it a secret
    steps:
      - name: Trigger Render deploy (staging)
        run: |
          curl -fsS -X POST \
            -H "Authorization: Bearer ${RENDER_API_TOKEN}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys \
            -d '{"clearCache":false}'
      - name: Echo metadata
        run: |
          echo "Service: ${RENDER_SERVICE_ID}"
          echo "Base URL: ${BASE_URL:-not-set}"

  deploy-production:
    # example: deploy on tagged releases
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production
    env:
      RENDER_SERVICE_ID: ${{ vars.RENDER_PROD_SERVICE_ID }}
      RENDER_API_TOKEN: ${{ secrets.RENDER_API_TOKEN }}
      DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
      BASE_URL: ${{ vars.PROD_BASE_URL }}
    steps:
      - name: Trigger Render deploy (production)
        run: |
          curl -fsS -X POST \
            -H "Authorization: Bearer ${RENDER_API_TOKEN}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys \
            -d '{"clearCache":false}'
      - name: Echo metadata
        run: |
          echo "Service: ${RENDER_SERVICE_ID}"
          echo "Base URL: ${BASE_URL:-not-set}"
