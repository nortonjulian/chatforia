import TelnyxResource from '../TelnyxResource.js';
import * as utils from '../utils.js';
const telnyxMethod = TelnyxResource.method;
function transformResponseData(response, telnyx) {
    return utils.addResourceToResponseData(response, telnyx, 'numberPortouts', {
        del: telnyxMethod({
            method: 'DELETE',
            path: '/portouts',
            urlParams: ['portouts'],
            paramsValues: [response.data.id],
            paramsNames: ['id'],
        }),
        update: telnyxMethod({
            method: 'PATCH',
            path: '/portouts',
            urlParams: ['portouts'],
            paramsValues: [response.data.id],
            paramsNames: ['id'],
        }),
    });
}
export const NumberPortouts = TelnyxResource.extend({
    path: 'portouts',
    list: telnyxMethod({
        method: 'GET',
    }),
    retrieve: telnyxMethod({
        method: 'GET',
        path: '/{id}',
        urlParams: ['id'],
        transformResponseData: transformResponseData,
    }),
    retrieveComments: telnyxMethod({
        method: 'GET',
        path: '/{id}/comments',
        urlParams: ['id'],
        transformResponseData: transformResponseData,
    }),
    create: telnyxMethod({
        path: '/{id}/comments',
        urlParams: ['id'],
        method: 'POST',
        transformResponseData: transformResponseData,
    }),
    listSupportingDocuments: telnyxMethod({
        method: 'GET',
        path: '/{id}/supporting_documents',
        urlParams: ['id'],
    }),
    createListOfSupportingDocuments: telnyxMethod({
        method: 'POST',
        path: '/{id}/supporting_documents',
        urlParams: ['id'],
        transformResponseData: transformResponseData,
    }),
    updateStatus: telnyxMethod({
        method: 'PATCH',
        path: '/{id}/{status}',
        urlParams: ['id'],
        transformResponseData: transformResponseData,
    }),
});
