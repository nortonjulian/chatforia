"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Brands = void 0;
const TelnyxResource_js_1 = __importDefault(require("../TelnyxResource.js"));
const telnyxMethod = TelnyxResource_js_1.default.method;
exports.Brands = TelnyxResource_js_1.default.extend({
    path: 'brand',
    basePath: '/10dlc/',
    includeBasic: ['create', 'list'],
    retrieve: telnyxMethod({
        method: 'GET',
        path: '/brand/{brandId}',
        urlParams: ['brandId'],
    }),
    update: telnyxMethod({
        method: 'PUT',
        path: '/brand/{brandId}',
        urlParams: ['brandId'],
    }),
    del: telnyxMethod({
        method: 'DELETE',
        path: '/brand/{brandId}',
        urlParams: ['brandId'],
    }),
    resend2faEmail: telnyxMethod({
        method: 'POST',
        path: '/brand/{brandId}/2faEmail',
        urlParams: ['brandId'],
    }),
    listExternalVettings: telnyxMethod({
        method: 'GET',
        path: '/brand/{brandId}/externalVetting',
        urlParams: ['brandId'],
        methodType: 'list',
    }),
    importExternalVettings: telnyxMethod({
        method: 'PUT',
        path: '/brand/{brandId}/externalVetting',
        urlParams: ['brandId'],
    }),
    orderExternalVettings: telnyxMethod({
        method: 'POST',
        path: '/brand/{brandId}/externalVetting',
        urlParams: ['brandId'],
    }),
    revet: telnyxMethod({
        method: 'PUT',
        path: '/brand/{brandId}/revet',
        urlParams: ['brandId'],
    }),
    feedback: telnyxMethod({
        method: 'GET',
        path: '/brand/feedback/{brandId}',
        urlParams: ['brandId'],
    }),
});
