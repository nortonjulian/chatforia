import TelnyxResource from '../TelnyxResource.js';
import * as utils from '../utils.js';
const telnyxMethod = TelnyxResource.method;
const CONFERENCES_COMMANDS = [
    'join',
    'mute',
    'unmute',
    'hold',
    'unhold',
    'speak',
    'play',
    'stop',
    'record_start',
    'record_stop',
    'update',
    'leave',
    'record_resume',
    'record_pause',
];
function getSpec(conferenceId) {
    if (conferenceId) {
        return function (methodName) {
            return {
                method: 'POST',
                path: `/{conferenceId}/actions/${methodName}`,
                urlParams: ['conferenceId'],
                paramsValues: [conferenceId],
                paramsNames: ['conferenceId'],
                methodType: 'create',
            };
        };
    }
    return function (methodName) {
        return {
            method: 'POST',
            path: `/{conferenceId}/actions/${methodName}`,
            urlParams: ['conferenceId'],
            paramsNames: ['conferenceId'],
            methodType: 'create',
        };
    };
}
const transformResponseData = (response, telnyx) => {
    const methods = utils.createNestedMethods(telnyxMethod, CONFERENCES_COMMANDS, getSpec(response.data.id));
    methods.listParticipants = telnyxMethod({
        method: 'GET',
        path: '/{conferenceId}/participants',
        urlParams: ['conferenceId'],
    });
    return utils.addResourceToResponseData(response, telnyx, 'conferences', methods);
};
export const Conferences = TelnyxResource.extend({
    path: 'conferences',
    includeBasic: ['list'],
    retrieve: telnyxMethod({
        method: 'GET',
        path: '/{id}',
        urlParams: ['id'],
        transformResponseData: transformResponseData,
    }),
    create: telnyxMethod({
        method: 'POST',
        transformResponseData: transformResponseData,
    }),
    listParticipants: telnyxMethod({
        method: 'GET',
        path: '/{conferenceId}/participants',
        urlParams: ['conferenceId'],
    }),
    instanceMethods: utils.createNestedMethods(telnyxMethod, CONFERENCES_COMMANDS, getSpec()),
});
